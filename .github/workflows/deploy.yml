name: Build Gamebook

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Create output directory
        run: |
          rm -rf output
          mkdir -p output

      - name: Build HTML gamebook with Pandoc
        run: |
          cd rulebook
          pandoc \
            01_rulebook.md \
            02_characters.md \
            --metadata-file=00_meta.yaml \
            --template=template.html \
            -o ../output/index.html

      - name: Copy style and assets
        run: |
          cp ./rulebook/style.css output/
          cp -r ./rulebook/assets output/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gamebook
          path: output/
      
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install awscli

      - name: Sync to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}  
        run: |
          aws s3 sync output/ s3://murderbot.armyr.se --delete

      - name: Invalidate CloudFront cache
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}  
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
